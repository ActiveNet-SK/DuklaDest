/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var app = {
    // Application Constructor
    initialize: function () {
        document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);
    },

    // deviceready Event Handler
    //
    // Bind any cordova events here. Common events are:
    // 'pause', 'resume', etc.
    onDeviceReady: function () {
        //  var SQLite = window.cordova.require('cordova-sqlite-plugin.SQLite');


        this.receivedEvent('deviceready');

        document.addEventListener("deviceready", pripravene, false);

        function pripravene() {
            var myDB = window.sqlitePlugin.openDatabase({ name: "test_cordova.db", location: 'default' });

            setTimeout(function () {


                alert("onDeviceReady");
                $('#informacie').append('onDeviceReady' + '<br>');

                myDB.transaction(function (transaction) {
                    transaction.executeSql('CREATE TABLE IF NOT EXISTS test_tab (id integer primary key, title text, desc text)', [],
                        function (tx, result) {
                            alert("Table created successfully");
                        },
                        function (error) {
                            alert("Error occurred while creating the table.");
                        });
                });

                var title = "sundaravel";
                var desc = "phonegap freelancer";
                myDB.transaction(function (transaction) {
                    var executeQuery = "INSERT INTO test_tab (title, desc) VALUES (?,?)";
                    transaction.executeSql(executeQuery, [title, desc]
                        , function (tx, result) {
                            alert('Inserted');
                        },
                        function (error) {
                            alert('Error occurred');
                        });
                });

                myDB.transaction(function (transaction) {
                    transaction.executeSql('SELECT * FROM test_tab', [], function (tx, results) {
                        var len = results.rows.length, i;
                        $("#rowCount").append(len);
                        for (i = 0; i < len; i++) {
                            $("#TableData").append("<tr><td>" + results.rows.item(i).id + "</td><td>" + results.rows.item(i).title + "</td><td>" + results.rows.item(i).desc + "</td></tr>");
                        }
                    }, null);
                });


            }, 3000);


        }



    },

    // Update DOM on a Received Event
    receivedEvent: function (id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    }
};

app.initialize();